version: '3'

services:
  sistema-clinico-medico:
    build:
      context: ./sistema_clinico_medico
      dockerfile: Dockerfile
    image: sistema-clinico-medico
    container_name: sistema-clinico-medico
    restart: unless-stopped
    networks:
      - app-network
    env_file: .env
    depends_on:
      - db
    environment:
      - POSTGRES_DB=sistema-clinico-medico
  hrm-api:
    build:
      context: ./datalysis-group/api
      dockerfile: Dockerfile
    image: hrm-api
    container_name: hrm-api
    restart: unless-stopped
    networks:
      - app-network
    env_file: .env
    environment:
      - DATABASE_URL=$DATABASE_URL
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
      - API_LOCAL_PORT=$API_LOCAL_PORT
    depends_on:
      - db
  hrm:
    build:
      context: ./datalysis-group/app
      dockerfile: Dockerfile
    image: hrm
    container_name: hrm
    restart: unless-stopped
    networks:
      - app-network
    env_file: .env
    environment:
      - REACT_APP_API_URL=$REACT_APP_API_URL
    depends_on:
      - hrm-api
  db:
    image: postgres:latest
    container_name: db
    restart: unless-stopped
    env_file: .env
    networks:
      - app-network
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    volumes:
      - postgres-data:/var/lib/postgresql/data
  mongo:
    image: mongo:5.0-focal
    container_name: mongo
    restart: unless-stopped
    env_file: .env
    networks:
      - app-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    ports:
      - "27017:27017"
    volumes: 
      - mongo-data:/data/db

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - hrm-api
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email $EMAIL --agree-tos --no-eff-email --staging -d $DOMINIO  -d www.$DOMINIO -d hrm.$DOMINIO -d hrm-api.$DOMINIO -d sistema-clinico-medico.$DOMINIO

volumes:
  certbot-etc:
  certbot-var:
  web-root:
  postgres-data:
  mongo-data:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: ./dhparam/
      o: bind
  
networks:
  app-network:
    driver: bridge
# version: '3'

# services:
#   postgres:
#     image: postgres:latest
#     restart: unless-stopped
#     env_file: .env
#     environment:
#       - POSTGRES_PASSWORD= $POSTGRES_PASSWORD
#       - POSTGRES_USER= $POSTGRES_USER
#       - POSTGRES_DB= $POSTGRES_DB
#     ports:
#       - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   webserver:
#     depends_on:
#       - wordpress
#     image: nginx:1.15.12-alpine
#     container_name: webserver
#     restart: unless-stopped
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./data/wordpress:/var/www/html
#       - ./nginx-conf:/etc/nginx/conf.d
#       - certbot-etc:/etc/letsencrypt

#   api:
#     depends_on:
#       - postgres
#     env_file: .env
#     ports:
#       - $API_LOCAL_PORT:$API_DOCKER_PORT
#     environment:
#       - DATABASE_URL=$DATABASE_URL
#       - CLIENT_ORIGIN=$CLIENT_ORIGIN
#       - API_LOCAL_PORT=$API_LOCAL_PORT

#   certbot:
#     depends_on:
#       - webserver
#     image: certbot/certbot
#     container_name: certbot
#     volumes:
#       - certbot-etc:/etc/letsencrypt
#       - ./data/wordpress:/var/www/html
#     command: certonly --webroot --webroot-path=/var/www/html --email $EMAIL --agree-tos --no-eff-email --staging -d $DOMINIO -d $WWW_DOMINIO
#     #command: certonly --webroot --webroot-path=/var/www/html --email $EMAIL --agree-tos --no-eff-email --force-renewal -d $DOMINIO -d $WWW_DOMINIO
# volumes:
#   certbot-etc:
#   postgres-data:
